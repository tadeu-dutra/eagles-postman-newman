{"_type":"export","__export_format":4,"__export_date":"2025-02-24T18:38:55.630Z","__export_source":"insomnia.desktop.app:v10.3.1","resources":[{"_id":"req_6ee84fa004a44a0b9daa641813baac6a","parentId":"fld_a984c52a9c8e4a3c980ad8a375f8abf1","modified":1740373893685,"created":1740367921550,"url":"{{BaseUrl}}/api/login/","name":"Login com e-mail inválido e senha válida","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"mail\": \"{{InvalidMail}}\",\n  \"password\": \"{{PasswordAdm}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1740367921550,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Check response message', () => {\n\tinsomnia.expect('E-mail ou senha informados são inválidos.').to.equal(insomnia.response.json().alert);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_a984c52a9c8e4a3c980ad8a375f8abf1","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740367862875,"created":1740367862875,"name":"Login de acesso","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367862876,"environmentType":"kv","_type":"request_group"},{"_id":"fld_fece2676fd8e413991a1a724ba6d8151","parentId":"wrk_e1e1ad06132e4625bddace0569de4612","modified":1740378957315,"created":1740367594888,"name":"[Tadeu] - Quality Eagles","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367593459,"preRequestScript":"","afterResponseScript":"","authentication":{},"_type":"request_group"},{"_id":"wrk_e1e1ad06132e4625bddace0569de4612","parentId":null,"modified":1740367616848,"created":1740367594884,"name":"Tadeu-QualityEagles-Collection","description":"","scope":"collection","_type":"workspace"},{"_id":"req_9848f65d154847659584bbdeb7e9e175","parentId":"fld_a984c52a9c8e4a3c980ad8a375f8abf1","modified":1740415321364,"created":1740368450439,"url":"{{BaseUrl}}/api/login/","name":"[BUG 20792 / Carol] Login com e-mail válido e senha em branco","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"mail\": \"{{MailAdm}}\",\n  \"password\": \"\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"preRequestScript":"insomnia.execution.skipRequest()","metaSortKey":-1740367757503.5,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate response password message', () => {\n\tinsomnia.expect('O campo senha é obrigatório.').to.equal(insomnia.response.json().password);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_244a04cec5d142bcb05e4a2712acfeda","parentId":"fld_a984c52a9c8e4a3c980ad8a375f8abf1","modified":1740416000352,"created":1740369309177,"url":"{{BaseUrl}}/api/login/","name":"[BUG 21093 / Iza] Login com email em branco e senha em branco","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"mail\": \"\",\n  \"password\": \"\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"preRequestScript":"insomnia.execution.skipRequest()","metaSortKey":-1740367675480.25,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate response mail message', () => {\n\tinsomnia.expect('O campo e-mail é obrigatório.').to.equal(insomnia.response.json().mail);\n});\n\ninsomnia.test('Validate response password message', () => {\n\tinsomnia.expect('O campo senha é obrigatório.').to.equal(insomnia.response.json().password);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_78eee44f5ce84897bf9bd9c7450ffde9","parentId":"fld_a984c52a9c8e4a3c980ad8a375f8abf1","modified":1740374045323,"created":1740370366064,"url":"{{BaseUrl}}/api/login/","name":"Login com email invalido e senha invalida","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"mail\": \"{{InvalidMail}}\",\n  \"password\": \"{{InvalidPassword}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1740367634468.625,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate invalid data message', () => {\n\tinsomnia.expect('E-mail ou senha informados são inválidos.').to.equal(insomnia.response.json().alert);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4929525d06ea4e238096208c92d3c026","parentId":"fld_a984c52a9c8e4a3c980ad8a375f8abf1","modified":1740374059935,"created":1740370558154,"url":"{{BaseUrl}}/api/login/","name":"Login com email valido e senha incorreta","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"mail\": \"{{MailAdm}}\",\n  \"password\": \"{{InvalidPassword}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1740367613962.8125,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate invalid data message', () => {\n\tinsomnia.expect('E-mail ou senha informados são inválidos.').to.equal(insomnia.response.json().alert);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_cc6edc6f72964731b071c5b83bc10adb","parentId":"fld_a984c52a9c8e4a3c980ad8a375f8abf1","modified":1740373711978,"created":1740370663781,"url":"{{BaseUrl}}/api/login/","name":"Login de acesso com sucesso","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"mail\": \"{{MailAdm}}\",\n  \"password\": \"{{PasswordAdm}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1740367603709.9062,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate invalid data message', () => {\n\tinsomnia.expect(insomnia.response.json().msg).contains(\"autenticação autorizada com sucesso\");\n});\n\ninsomnia.test('Validate response contains token', () => {\n    insomnia.expect(insomnia.response.json()).to.have.property('token');\n});\n\ninsomnia.globals.set(\"TokenAdm\", insomnia.response.json().token);","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_fac509c11ec24b9d8860722dcc7f5e75","parentId":"fld_36455affcc5240a299b8510cbfc670e8","modified":1740416362919,"created":1740371770978,"url":"{{BaseUrl}}/api/user/","name":"[BUG 21142 / Cleisson] Registrar usuário com sucesso","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"fullName\": \"{{FullName}}\",\n  \"mail\": \"{{MailUser}}\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{Cpf}}\",\n  \"password\": \"{{PasswordUser}}\",\n  \"confirmPassword\": \"{{PasswordUser}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"// insomnia.execution.skipRequest()\n\n// Function to generate a random 11-digit number\nfunction generateRandom11DigitNumber() {\n    // Generate a random number between 0 and 10^11 - 1\n    let randomNumber = Math.floor(Math.random() * 1e11);\n\n    // Ensure that the number has 11 digits by padding with leading zeros if necessary\n    return String(randomNumber).padStart(11, '0');\n}\n\n// Generate the random number\nlet random11DigitNumber = generateRandom11DigitNumber();\n\n// Set the number as an environment variable\ninsomnia.environment.set(\"Cpf\", random11DigitNumber);\n\n////////////////////////////////////////////////////////////////\n\nfunction generateRandomLastname() {\n    // List of sample lastnames; you can customize this list with more options\n    const lastnames = [\n        \"Smith\", \"Johnson\", \"Williams\", \"Jones\", \"Brown\",\n        \"Davis\", \"Miller\", \"Wilson\", \"Moore\", \"Taylor\",\n        \"Anderson\", \"Thomas\", \"Jackson\", \"White\", \"Harris\",\n        \"Martin\", \"Thompson\", \"Garcia\", \"Martinez\", \"Robinson\"\n    ];\n\n    // Select a random lastname from the list\n    let randomLastname = lastnames[Math.floor(Math.random() * lastnames.length)];\n\n    // Ensure the first letter is capitalized\n    return randomLastname.charAt(0).toUpperCase() + randomLastname.slice(1).toLowerCase();\n}\n\n// Generate the random lastname\nlet randomLastname = generateRandomLastname();\n\n// Set the lastname as an environment variable\ninsomnia.globals.set(\"LastName\", randomLastname);\n\n// Log the lastname to the console for verification\nconsole.log(\"Generated Random Last name:\", randomLastname);\n\n// Function to generate a random first name\nfunction generateRandomFirstName() {\n    // List of sample first names; you can customize this list with more options\n    const firstNames = [\n        \"James\", \"Mary\", \"John\", \"Patricia\", \"Robert\",\n        \"Jennifer\", \"Michael\", \"Linda\", \"William\", \"Elizabeth\",\n        \"David\", \"Barbara\", \"Richard\", \"Susan\", \"Joseph\",\n        \"Jessica\", \"Thomas\", \"Sarah\", \"Charles\", \"Karen\"\n    ];\n\n    // Select a random first name from the list\n    let randomFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n\n    // Ensure the first letter is capitalized\n    return randomFirstName.charAt(0).toUpperCase() + randomFirstName.slice(1).toLowerCase();\n}\n\n// Generate the random first name\nlet randomFirstName = generateRandomFirstName();\n\n// Set the first name as an environment variable\ninsomnia.globals.set(\"FirstName\", randomFirstName);\n\n// Log the first name to the console for verification\nconsole.log(\"Generated Random First Name:\", randomFirstName);\n\ninsomnia.globals.set(\"FullName\", insomnia.globals.get(\"FirstName\") + \" \" + insomnia.globals.get(\"LastName\"));\ninsomnia.globals.set(\"MailUser\", insomnia.globals.get('FullName').toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") + '@qacoders.com.br');\n//////////////////////////////////////////////////////////////\n\nfunction generatePassword() {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\n    const comprimentoMinimo = 8;\n    const comprimentoMaximo = 12;\n    let senhaArray = [];\n \n    senhaArray.push(chars[Math.floor(Math.random() * 26)]); \n    senhaArray.push(chars[26 + Math.floor(Math.random() * 26)]); \n    senhaArray.push(chars[52 + Math.floor(Math.random() * 10)]); \n    senhaArray.push(chars[62 + Math.floor(Math.random() * 4)]); \n    \n    const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\n    \n    for (let i = 0; i < comprimentoRestante; i++) {\n        senhaArray.push(chars[Math.floor(Math.random() * chars.length)]);\n    }\n    return shuffleString(senhaArray.join(\"\"));\n}\n\nfunction shuffleString(string) {\n  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\n}\n\ninsomnia.globals.set(\"PasswordUser\", generatePassword());","metaSortKey":-1740371778433,"isPrivate":false,"afterResponseScript":"// insomnia.test('Status code is 201', () => {\n//     insomnia.response.to.have.status(201);\n// });\n\ninsomnia.test('Validate name', () => {\n    insomnia.expect(insomnia.response.json().user).to.have.property('fullName');\n});\n\ninsomnia.test('Validate mail', () => {\n    insomnia.expect(insomnia.response.json().user).to.have.property('mail');\n});\n\ninsomnia.globals.set('IdUser', insomnia.response.json().user._id);\ninsomnia.globals.set('MailUser', insomnia.response.json().user.mail);\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_36455affcc5240a299b8510cbfc670e8","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740371184444,"created":1740371141219,"name":"Novo Cadastro de Usuário","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367728167,"environmentType":"kv","_type":"request_group"},{"_id":"req_c440beee92124ba6990dbe6ff29fed1c","parentId":"fld_36455affcc5240a299b8510cbfc670e8","modified":1740374434957,"created":1740373817775,"url":"{{BaseUrl}}/api/user/","name":"Registar usuário com email inválido","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"fullName\": \"{{FullName}}\",\n  \"mail\": \"{{InvalidMail}}\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{Cpf}}\",\n  \"password\": \"{{PasswordUser}}\",\n  \"confirmPassword\": \"{{PasswordUser}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740369849991.5,"isPrivate":false,"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate invalid email', () => {\n\tinsomnia.expect('O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].').to.equal(insomnia.response.json().error[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_78294311f62b427a89197c79f34e6271","parentId":"fld_36455affcc5240a299b8510cbfc670e8","modified":1740374511170,"created":1740374443495,"url":"{{BaseUrl}}/api/user/","name":"Registrar Usuário com CPF em branco","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"fullName\": \"{{FullName}}\",\n  \"mail\": \"{{MailUser}}\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"\",\n  \"password\": \"{{PasswordUser}}\",\n  \"confirmPassword\": \"{{PasswordUser}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740369849891.5,"isPrivate":false,"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate invalid email', () => {\n\tinsomnia.expect('O campo CPF é obrigatório!').to.equal(insomnia.response.json().error[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7c8a11668c3c419f9964164097b82072","parentId":"fld_36455affcc5240a299b8510cbfc670e8","modified":1740375800597,"created":1740375746630,"url":"{{BaseUrl}}/api/login/","name":"Login de acesso com sucesso (user)","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"mail\": \"{{MailUser}}\",\n  \"password\": \"{{PasswordUser}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1740369849791.5,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate invalid data message', () => {\n\tinsomnia.expect(insomnia.response.json().msg).contains(\"autenticação autorizada com sucesso\");\n});\n\ninsomnia.test('Validate response contains token', () => {\n    insomnia.expect(insomnia.response.json()).to.have.property('token');\n});\n\ninsomnia.globals.set(\"TokenUser\", insomnia.response.json().token);","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_546abf9626134934b4b5a4626bf450be","parentId":"fld_6d29efcb9bf2402faa5bd035fd34c885","modified":1740375701272,"created":1740375513152,"url":"{{BaseUrl}}/api/user/count","name":"Contagem de usuário com sucesso","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740375521821,"isPrivate":false,"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\r\n    insomnia.response.to.have.status(200);\r\n});\r\n\r\ninsomnia.test('Verify property cont exist', () => {\r\n    insomnia.expect(insomnia.response.json().count).to.exist;\r\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_6d29efcb9bf2402faa5bd035fd34c885","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740375192298,"created":1740375178073,"name":"Lista de Cadastro de Usuários","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367660812.5,"environmentType":"kv","_type":"request_group"},{"_id":"req_d0f46e647dc94717a228f104aa5a601b","parentId":"fld_6d29efcb9bf2402faa5bd035fd34c885","modified":1740376080349,"created":1740375875230,"url":"{{BaseUrl}}/api/user/count","name":"Contagem de usuários com o token inválido","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{InvalidToken}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740373650127,"isPrivate":false,"afterResponseScript":"insomnia.test(\"Status code is 403\", function () {\n    insomnia.response.to.have.status(403);\n});\n\ninsomnia.test('Verify property count not exist', () => {\n    insomnia.expect(insomnia.response.json().count).not.to.exist;\n});\n\ninsomnia.test('Validate invalid token', () => {\n\tinsomnia.expect('Failed to authenticate token.').to.equal(insomnia.response.json().errors[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_020b393212f34c6ba8e8731a73d92b93","parentId":"fld_6d29efcb9bf2402faa5bd035fd34c885","modified":1740376138707,"created":1740376105862,"url":"{{BaseUrl}}/api/user/count","name":"Contagem de usuários sem token","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{InvalidToken}}","addTo":"header","disabled":true},"preRequestScript":"","metaSortKey":-1740372714280,"isPrivate":false,"afterResponseScript":"insomnia.test(\"Status code is 403\", function () {\n    insomnia.response.to.have.status(403);\n});\n\ninsomnia.test('Verify property count not exist', () => {\n    insomnia.expect(insomnia.response.json().count).not.to.exist;\n});\n\ninsomnia.test('Validate no token provided', () => {\n\tinsomnia.expect('No token provided.').to.equal(insomnia.response.json().errors[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_f69467491da94ac8a0fab2dc85084bae","parentId":"fld_6d29efcb9bf2402faa5bd035fd34c885","modified":1740376497564,"created":1740376199727,"url":"{{BaseUrl}}/api/user/{{IdUser}}","name":"Listar Usuário por ID acesso negado","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740372246356.5,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 403\", function () {\n    insomnia.response.to.have.status(403);\n});\n\ninsomnia.test('Validate empty token', () => {\n\tinsomnia.expect('No token provided.').to.equal(insomnia.response.json().errors[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_417a7581677f466d8c0cfcb499a782e1","parentId":"fld_6d29efcb9bf2402faa5bd035fd34c885","modified":1740376722694,"created":1740376265450,"url":"{{BaseUrl}}/api/user/{{IdUser}}","name":"Listar usuário por ID com sucesso","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740372012394.75,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate user id matches', () => {\n\tinsomnia.expect(insomnia.globals.get(\"IdUser\")).to.equal(insomnia.response.json()._id);\n});\n\ninsomnia.test('Validate user mail matches', () => {\n\tinsomnia.expect(insomnia.globals.get(\"MailUser\")).to.equal(insomnia.response.json().mail);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_80eae1a15973439f98e02fd7d1fdf502","parentId":"fld_6d29efcb9bf2402faa5bd035fd34c885","modified":1740377027115,"created":1740376785493,"url":"{{BaseUrl}}/api/user/{{InvalidIdUser}}","name":"Listar Usuário por ID não encontrado","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740371953904.3125,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 404\", function () {\n    insomnia.response.to.have.status(404);\n});\n\ninsomnia.test('Validate invalid data message', () => {\n\tinsomnia.expect('Esse usuário não existe em nossa base de dados.').to.equal(insomnia.response.json().alert[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_95f7fb8bcb9c494990234e8f26a815de","parentId":"fld_6d29efcb9bf2402faa5bd035fd34c885","modified":1740376537705,"created":1740376537705,"url":"{{BaseUrl}}/api/user","name":"Listar usuários com sucesso","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740371895413.875,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate response contains an array list', () => {\n\tinsomnia.expect(Array.isArray(insomnia.response.json())).to.be.true;\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_40d235620cad4f3fa7a0540d70b89de1","parentId":"fld_a91467c2c880492caf5b3f15a9bbe1a0","modified":1740378214218,"created":1740377357226,"url":"{{BaseUrl}}/api/user/status/{{IdUser}}","name":"Editar status por id do usuário para false","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\r\n  \"status\": false\r\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740377363820,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 200', () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate response message', () => {\n    insomnia.expect('Status do usuario atualizado com sucesso para status false.').to.be.equal(insomnia.response.json().msg);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_a91467c2c880492caf5b3f15a9bbe1a0","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740377140361,"created":1740377104765,"name":"Editar Cadastro de Usuário","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367627135.25,"environmentType":"kv","_type":"request_group"},{"_id":"req_806b2d8fe05046cfbade7b07c3371b90","parentId":"fld_a91467c2c880492caf5b3f15a9bbe1a0","modified":1740378209679,"created":1740377660048,"url":"{{BaseUrl}}/api/user/status/{{IdUser}}","name":"Editar status por id do usuário para true","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"status\": true\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740376442820.5,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 200', () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate response message', () => {\n    insomnia.expect('Status do usuario atualizado com sucesso para status true.').to.be.equal(insomnia.response.json().msg);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_d5d87b6f5fcd4f15a8d0f76a959c91eb","parentId":"fld_a91467c2c880492caf5b3f15a9bbe1a0","modified":1740378204095,"created":1740377709318,"url":"{{BaseUrl}}/api/user/status/{{IdUser}}","name":"Editar status por id do usuário para undefined","description":"","method":"PUT","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740375982320.75,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 200', () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate response message', () => {\n    insomnia.expect('Status do usuario atualizado com sucesso para status undefined.').to.be.equal(insomnia.response.json().msg);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_533c6a803eb94f02a177ed78aa4d884a","parentId":"fld_a91467c2c880492caf5b3f15a9bbe1a0","modified":1740378199374,"created":1740377802025,"url":"{{BaseUrl}}/api/user/{{IdUser}}","name":"Editar usuário por Id com fullName em branco","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"fullName\": \"\",\n\t\"mail\": \"{{MailUser}}\" \n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740375752070.875,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 400', () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate response message', () => {\n    insomnia.expect('O campo nome completo é obrigatório.').to.be.equal(insomnia.response.json().error[0]);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_ddf28c24f65143fab744f283aaf2a569","parentId":"fld_a91467c2c880492caf5b3f15a9bbe1a0","modified":1740378194236,"created":1740377983948,"url":"{{BaseUrl}}/api/user/{{IdUser}}","name":"Editar usuário por Id com mail inválido","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"fullName\": \"{{FullName}}\",\n\t\"mail\": \"{{InvalidMail}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740375636945.9375,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 400', () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate response message', () => {\n    insomnia.expect('O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].').to.be.equal(insomnia.response.json().error[0]);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e5fa25b682c24262931d274b18c48d49","parentId":"fld_a91467c2c880492caf5b3f15a9bbe1a0","modified":1740378187647,"created":1740378113691,"url":"{{BaseUrl}}/api/user/{{IdUser}}","name":"Editar usuário por Id com sucesso","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"fullName\": \"{{FullName}}\",\n\t\"mail\": \"{{MailUser}}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740375579383.4688,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 200', () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate response message', () => {\n    insomnia.expect('Dados atualizados com sucesso!').to.be.equal(insomnia.response.json().msg);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_ae026d5d1ebb41e28d58ebf728ec1589","parentId":"fld_172448a6e82646e8abf6bb7294930ffa","modified":1740378335415,"created":1740378259929,"url":"{{BaseUrl}}/api/user/{{IdUser}}","name":"Excluir Cadastro de Usuário com Sucesso","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740378268226,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 200', () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate user deletion', () => {\n    insomnia.expect(insomnia.response.json().msg).to.equal('Usuário deletado com sucesso!.')\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_172448a6e82646e8abf6bb7294930ffa","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740377167056,"created":1740377162642,"name":"Excluir Cadastro de Usuário","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367610296.625,"environmentType":"kv","_type":"request_group"},{"_id":"req_bceb83827e0c494b8bdfdc3e731f7595","parentId":"fld_172448a6e82646e8abf6bb7294930ffa","modified":1740378566031,"created":1740378385839,"url":"{{BaseUrl}}/api/user/{{InvalidIdUser}}","name":"Excluir Cadastro de Usuário inexistente","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740378268126,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('status code is 400', () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate user deletion', () => {\n    insomnia.expect(insomnia.response.json().alert[0]).to.equal('Esse usuário não existe em nossa base de dados.')\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7f16bbd350214747b1d5406378902f4e","parentId":"fld_172448a6e82646e8abf6bb7294930ffa","modified":1740378680883,"created":1740378598847,"url":"{{BaseUrl}}/api/user/{{IdUser}}","name":"Excluir Cadastro de Usuário sem autorização","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenAdm}}","addTo":"header","disabled":true},"preRequestScript":"","metaSortKey":-1740378268026,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 403', () => {\n    insomnia.response.to.have.status(403);\n});\n\ninsomnia.test('Validate no token provided', () => {\n    insomnia.expect(insomnia.response.json().errors[0]).to.equal('No token provided.')\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4704eb33b55645099eb058256133f4b7","parentId":"fld_78466cb4801f4ece8d78f32d1d43735c","modified":1740416040138,"created":1740379533181,"url":"{{BaseUrl}}/api/company","name":"[BUG 21425 / Lucas] Nome da Empresa - Campo obrigatório","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"zipCode\": \"04777001\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\",\n      \"district\": \"Rua das Flores\",\n      \"street\": \"Avenida Interlagos\",\n      \"number\": \"50\",\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\n      \"country\": \"Brasil\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"preRequestScript":"insomnia.execution.skipRequest()\n\n// Function to generate a random 14-digit number\nfunction generateRandomDigitNumber() {\n    // Generate a random number between 0 and 10^11 - 1\n    let randomNumber = Math.floor(Math.random() * 1e14);\n\n    // Ensure that the number has 11 digits by padding with leading zeros if necessary\n    return String(randomNumber).padStart(14, '0');\n}\n\n// Generate the random number\nlet randomDigitNumber = generateRandomDigitNumber();\n\n// Set the number as an environment variable\ninsomnia.environment.set(\"Cnpj\", randomDigitNumber);\n\n////////////////////////////////////////////////////////////////","metaSortKey":-1740379533181,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate corporate name is empty', () => {\n\tinsomnia.expect('ValidationError: corporateName: O campo \\'corporateName\\' é obrigatório.').to.equal(insomnia.response.json().error);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_78466cb4801f4ece8d78f32d1d43735c","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740378750025,"created":1740378732377,"name":"Novo Cadastro de Empresa","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367601877.3125,"environmentType":"kv","_type":"request_group"},{"_id":"req_e693087383444281af10a36b67eb02bc","parentId":"fld_78466cb4801f4ece8d78f32d1d43735c","modified":1740380827281,"created":1740380142030,"url":"{{BaseUrl}}/api/company","name":"Nome da empresa - Nome com 101 caracteres","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"{{TooLongString}}\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"zipCode\": \"04777001\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\",\n      \"district\": \"Rua das Flores\",\n      \"street\": \"Avenida Interlagos\",\n      \"number\": \"50\",\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\n      \"country\": \"Brasil\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"preRequestScript":"// Função para gerar uma string aleatória de um comprimento específico\nfunction generateRandomString(length) {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        const randomIndex = Math.floor(Math.random() * characters.length);\n        result += characters.charAt(randomIndex);\n    }\n    return result;\n}\n\n// Gerar a string de 101 caracteres\nlet randomString101 = generateRandomString(101);\n\n// Configurar a string como uma variável de ambiente\ninsomnia.environment.set(\"TooLongString\", randomString101);\n\n// Log da string para verificação\nconsole.log(\"Generated 101-character String:\", randomString101);\n\n////////////////////////////////////////////////////////////////","metaSortKey":-1740378900703.5,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate corporate name is more than 100 characteres', () => {\n\tinsomnia.expect('O campo \\'Nome da empresa\\' deve ter no máximo 100 caracteres.').to.equal(insomnia.response.json().error[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_07ab4f79c27c4f8dbcf96c3a39f8fcd8","parentId":"fld_78466cb4801f4ece8d78f32d1d43735c","modified":1740412179462,"created":1740380628925,"url":"{{BaseUrl}}/api/company","name":"Novo Cadastro de Empresa","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"test\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"zipCode\": \"04777001\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\",\n      \"district\": \"Rua das Flores\",\n      \"street\": \"Avenida Interlagos\",\n      \"number\": \"50\",\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\n      \"country\": \"Brasil\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"preRequestScript":"// Function to generate a random 14-digit number\nfunction generateRandomDigitNumber() {\n    // Generate a random number between 0 and 10^11 - 1\n    let randomNumber = Math.floor(Math.random() * 1e14);\n\n    // Ensure that the number has 11 digits by padding with leading zeros if necessary\n    return String(randomNumber).padStart(14, '0');\n}\n\n// Generate the random number\nlet randomDigitNumber = generateRandomDigitNumber();\n\n// Set the number as an environment variable\ninsomnia.environment.set(\"Cnpj\", randomDigitNumber);\n\n////////////////////////////////////////////////////////////////\n","metaSortKey":-1740378742584.125,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 201\", () => {\n    insomnia.response.to.have.status(201);\n});\n\ninsomnia.test('Validate company creation', () => {\n\tinsomnia.expect('Olá a companhia true foi cadastrada com sucesso.').to.equal(insomnia.response.json().msg);\n});\n\ninsomnia.globals.set('IdCompany', insomnia.response.json().newCompany._id);","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_06694f2aa3fb470389bdad36acfcb7fb","parentId":"fld_78466cb4801f4ece8d78f32d1d43735c","modified":1740380879172,"created":1740380430801,"url":"{{BaseUrl}}/api/company","name":"Nome da empresa - Teste de Duplicidade","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"test\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"zipCode\": \"04777001\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\",\n      \"district\": \"Rua das Flores\",\n      \"street\": \"Avenida Interlagos\",\n      \"number\": \"50\",\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\n      \"country\": \"Brasil\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"preRequestScript":"","metaSortKey":-1740378584464.75,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate corporate name is empty', () => {\n\tinsomnia.expect('Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.').to.equal(insomnia.response.json().alert[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_a2a22be02975463cb081f670af1eac23","parentId":"fld_c1153b0ac4c743cd9b14528cfbe91e93","modified":1740381055115,"created":1740381024686,"url":"{{BaseUrl}}/api/company","name":"Lista Cadastro de Empresa","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740381044709,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate response contains an array list', () => {\n\tinsomnia.expect(Array.isArray(insomnia.response.json())).to.be.true;\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_c1153b0ac4c743cd9b14528cfbe91e93","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740378774436,"created":1740378774436,"name":"Lista Cadastro de Empresa","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367597668.1562,"environmentType":"kv","_type":"request_group"},{"_id":"req_20ebf9215bb94ca089d43f3b857bba6b","parentId":"fld_bd1d6dfdc2e641d08f71f79ed6c69e5c","modified":1740416088872,"created":1740381168870,"url":"{{BaseUrl}}/api/company/address/{{IdCompany}}","name":"Editar dados de Endereço da Empresa com campo nome tendo mais caracteres que o limite definido","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"test\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"zipCode\": \"04777001\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\",\n      \"district\": \"Rua das Flores\",\n      \"street\": \"Avenida Interlagos\",\n      \"number\": \"11188811199\",\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\n      \"country\": \"Brasil\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740381177717,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 400', () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate corporate address number is more than 10 characteres', () => {\n\tinsomnia.expect('\"O campo \\'número\\' deve possuir no máximo 10 caracteres.').contains(insomnia.response.json().error[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_bd1d6dfdc2e641d08f71f79ed6c69e5c","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740378797733,"created":1740378797733,"name":"Editar dados de Endereço da Empresa","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367595563.5781,"environmentType":"kv","_type":"request_group"},{"_id":"req_ff57351236bc4184a6cadaa675ad0e29","parentId":"fld_bd1d6dfdc2e641d08f71f79ed6c69e5c","modified":1740416095623,"created":1740382349795,"url":"{{BaseUrl}}/api/company/address/{{IdCompany}}","name":"Editar dados de Endereço da Empresa com campos obrigatórios em branco","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"test\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"zipCode\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"district\": \"\",\n      \"street\": \"\",\n      \"number\": \"\",\n      \"complement\": \"\",\n      \"country\": \"\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740381111213,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 400', () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate corporate address number is more than 10 characteres', () => {\n\tinsomnia.expect(insomnia.response.json().error[0]).contains('O campo \\'CEP\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[1]).contains('O campo País é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[2]).contains('O campo \\'cidade\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[3]).contains('O campo \\'estado\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[4]).contains('O campo \\'bairro\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[5]).contains('O campo \\'logradouro\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[6]).contains('O campo \\'número\\' é obrigatório.');\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_64d34d6c37d146029609369e0babac5b","parentId":"fld_bd1d6dfdc2e641d08f71f79ed6c69e5c","modified":1740416485658,"created":1740382693560,"url":"{{BaseUrl}}/api/company/address/{{IdCompany}}","name":"[BUG 21338 / Ítalo] Editar dados de Endereço da Empresa com Sucesso","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"test\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"zipCode\": \"{{randomZipCode}}\",\n      \"city\": \"{{randomCity}}\",\n      \"state\": \"{{randomState}}\",\n      \"district\": \"{{randomDistrict}}\",\n      \"street\": \"{{randomStreet}}\",\n      \"number\": \"{{randomNumber}}\",\n      \"complement\": \"{{randomAddressComplement}}\",\n      \"country\": \"{{randomCountry}}\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"insomnia.execution.skipRequest()\n\n// Function to generate a random zip code with exactly 8 digits\nfunction generateRandomZipCode() {\n    const minValue = 10000000; // Minimum 8-digit number\n    const maxValue = 99999999; // Maximum 8-digit number\n    \n    // Generate a random number between minValue and maxValue\n    const randomZipCode = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n    return randomZipCode.toString();\n}\n\n// Generate the random zip code\nlet randomZipCode = generateRandomZipCode();\n\n// Set the random zip code as an environment variable\ninsomnia.environment.set(\"randomZipCode\", randomZipCode);\n\n// Log the zip code to the console for verification\nconsole.log(\"Generated Random Zip Code:\", randomZipCode);\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// List of sample city names; you can customize this list with more options\nconst cities = [\n    \"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\",\n    \"Philadelphia\", \"San Antonio\", \"San Diego\", \"Dallas\", \"San Jose\",\n    \"Austin\", \"Jacksonville\", \"Fort Worth\", \"Columbus\", \"Charlotte\",\n    \"San Francisco\", \"Indianapolis\", \"Seattle\", \"Denver\", \"Washington\"\n];\n\n// Function to select a random city from the list\nfunction getRandomCity() {\n    const randomIndex = Math.floor(Math.random() * cities.length);\n    return cities[randomIndex];\n}\n\n// Generate the random city name\nlet randomCity = getRandomCity();\n\n// Set the random city name as an environment variable\ninsomnia.environment.set(\"randomCity\", randomCity);\n\n// Log the city name to the console for verification\nconsole.log(\"Generated Random City:\", randomCity);\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// List of Brazilian states by their abbreviations\nconst states = [\n    \"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\",\n    \"MT\", \"MS\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\",\n    \"RS\", \"RO\", \"RR\", \"SC\", \"SP\", \"SE\", \"TO\"\n];\n\n// Function to select a random state from the list\nfunction getRandomState() {\n    const randomIndex = Math.floor(Math.random() * states.length);\n    return states[randomIndex];\n}\n\n// Generate the random state\nlet randomState = getRandomState();\n\n// Set the random state as an environment variable\ninsomnia.environment.set(\"randomState\", randomState);\n\n// Log the state to the console for verification\nconsole.log(\"Generated Random Brazilian State:\", randomState);\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// List of sample district names; customize this list with relevant district names\nconst districts = [\n    \"Downtown\", \"Uptown\", \"West End\", \"East Side\", \"Northfield\",\n    \"South Park\", \"Old Town\", \"New City\", \"Lakeside\", \"Hilltop\",\n    \"Riverbend\", \"Greenfield\", \"Meadowlands\", \"Brookside\", \"Sunnyvale\"\n];\n\n// Function to select a random district from the list\nfunction getRandomDistrict() {\n    const randomIndex = Math.floor(Math.random() * districts.length);\n    return districts[randomIndex];\n}\n\n// Generate the random district name\nlet randomDistrict = getRandomDistrict();\n\n// Set the random district name as an environment variable\ninsomnia.environment.set(\"randomDistrict\", randomDistrict);\n\n// Log the district name to the console for verification\nconsole.log(\"Generated Random District:\", randomDistrict);\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// List of sample street names; you can customize this list with relevant street names\nconst streets = [\n    \"Main Street\", \"High Street\", \"Broadway\", \"Maple Avenue\", \"Elm Street\",\n    \"Oak Street\", \"Pine Street\", \"Cedar Avenue\", \"Sunset Boulevard\", \"Park Lane\",\n    \"5th Avenue\", \"6th Avenue\", \"7th Avenue\", \"8th Avenue\", \"9th Avenue\",\n    \"1st Street\", \"2nd Street\", \"3rd Street\", \"4th Street\", \"Hill Street\"\n];\n\n// Function to select a random street from the list\nfunction getRandomStreet() {\n    const randomIndex = Math.floor(Math.random() * streets.length);\n    return streets[randomIndex];\n}\n\n// Generate the random street name\nlet randomStreet = getRandomStreet();\n\n// Set the random street name as an environment variable\ninsomnia.environment.set(\"randomStreet\", randomStreet);\n\n// Log the street name to the console for verification\nconsole.log(\"Generated Random Street:\", randomStreet);\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// Function to generate a random number with fewer than 10 digits\nfunction generateRandomNumber(maxDigits) {\n    // Calculate the maximum value for the given number of digits\n    const maxValue = Math.pow(10, maxDigits) - 1;\n    \n    // Generate a random number between 0 and maxValue\n    return Math.floor(Math.random() * (maxValue + 1));\n}\n\n// Set the maximum number of digits (less than 10)\nconst maxDigits = 9; // Change this value if you want fewer digits\n\n// Generate the random number\nlet randomNumber = generateRandomNumber(maxDigits);\n\n// Set the random number as an environment variable\ninsomnia.environment.set(\"randomNumber\", randomNumber);\n\n// Log the random number to the console for verification\nconsole.log(\"Generated Random Number:\", randomNumber);\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// List of sample address complements; customize this list with relevant options\nconst addressComplements = [\n    \"Apt. 101\", \"Suite 202\", \"Floor 3\", \"Building A\", \"Unit B12\",\n    \"Penthouse\", \"Room 404\", \"Basement\", \"Annex\", \"Rear Entrance\",\n    \"Front Desk\", \"Mailbox 5\", \"Gate 2\", \"Lot 15\", \"Tower 3\",\n    \"Block C\", \"Wing East\", \"Section 8\", \"Cabin 12\", \"Cottage\"\n];\n\n// Function to select a random address complement from the list\nfunction getRandomAddressComplement() {\n    const randomIndex = Math.floor(Math.random() * addressComplements.length);\n    return addressComplements[randomIndex];\n}\n\n// Generate the random address complement\nlet randomAddressComplement = getRandomAddressComplement();\n\n// Set the random address complement as an environment variable\ninsomnia.environment.set(\"randomAddressComplement\", randomAddressComplement);\n\n// Log the address complement to the console for verification\nconsole.log(\"Generated Random Address Complement:\", randomAddressComplement);\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// List of sample country names; you can customize this list with more options\nconst countries = [\n    \"United States\", \"Canada\", \"Brazil\", \"United Kingdom\", \"Germany\",\n    \"France\", \"Australia\", \"India\", \"China\", \"Japan\",\n    \"Mexico\", \"Italy\", \"Spain\", \"Russia\", \"South Africa\",\n    \"Argentina\", \"New Zealand\", \"Netherlands\", \"Sweden\", \"Norway\"\n];\n\n// Function to select a random country from the list\nfunction getRandomCountry() {\n    const randomIndex = Math.floor(Math.random() * countries.length);\n    return countries[randomIndex];\n}\n\n// Generate the random country name\nlet randomCountry = getRandomCountry();\n\n// Set the random country name as an environment variable\ninsomnia.environment.set(\"randomCountry\", randomCountry);\n\n// Log the country name to the console for verification\nconsole.log(\"Generated Random Country:\", randomCountry);","metaSortKey":-1740381111113,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 200', () => {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate response message', () => {\n\tinsomnia.expect('Endereço da companhia atualizado com sucesso.').to.equal(insomnia.response.json().msg);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9eedea2f1d504ba38020f8896642a260","parentId":"fld_bd1d6dfdc2e641d08f71f79ed6c69e5c","modified":1740416112888,"created":1740383707850,"url":"{{BaseUrl}}/api/company/address/{{IdCompany}}","name":"Editar dados de Endereço da Empresa sem informar campos obrigatórios","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"corporateName\": \"test\",\n  \"registerCompany\": \"{{Cnpj}}\",\n  \"mail\": \"test@test.com\",\n  \"matriz\": \"Teste\",\n  \"responsibleContact\": \"Marcio\",\n  \"telephone\": \"99999999999999\",\n  \"serviceDescription\": \"Testes\",\n  \"address\": [\n    {\n      \"complement\": \"\"\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","key":"Authorization","value":"{{TokenUser}}","addTo":"header","disabled":false},"preRequestScript":"","metaSortKey":-1740381111013,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test('Status code is 400', () => {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate corporate address number is more than 10 characteres', () => {\n\tinsomnia.expect(insomnia.response.json().error[0]).contains('O campo \\'CEP\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[1]).contains('O campo País é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[2]).contains('O campo \\'cidade\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[3]).contains('O campo \\'estado\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[4]).contains('O campo \\'bairro\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[5]).contains('O campo \\'logradouro\\' é obrigatório.');\n\tinsomnia.expect(insomnia.response.json().error[6]).contains('O campo \\'número\\' é obrigatório.');\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e8b5e823d07f4568a8abd4bcea8953f7","parentId":"fld_0e921cb6f02240d9ba1ec8fc23daf3d5","modified":1740386071018,"created":1740385607011,"url":"{{BaseUrl}}/api/company/count","name":"Count Empresas","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"metaSortKey":-1740385607011,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Verify property cont exist', () => {\n    insomnia.expect(insomnia.response.json().count).to.exist;\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_0e921cb6f02240d9ba1ec8fc23daf3d5","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740378825338,"created":1740378825338,"name":"Contagem de Empresas","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367594511.289,"environmentType":"kv","_type":"request_group"},{"_id":"req_b869e1cf0c6042f5ad0ef65394bace01","parentId":"fld_0e921cb6f02240d9ba1ec8fc23daf3d5","modified":1740386035473,"created":1740385985219,"url":"{{BaseUrl}}/api/company/count","name":"Sem Token de Autentificacão","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"Authorization","value":"{{InvalidToken}}","addTo":"header","disabled":true},"preRequestScript":"","metaSortKey":-1740385606911,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 403\", function () {\n    insomnia.response.to.have.status(403);\n});\n\ninsomnia.test('Verify property count not exist', () => {\n    insomnia.expect(insomnia.response.json().count).not.to.exist;\n});\n\ninsomnia.test('Validate no token provided', () => {\n\tinsomnia.expect('No token provided.').to.equal(insomnia.response.json().errors[0]);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b58aae3ae1dc4e0dbba86a40d6504764","parentId":"fld_b5c2d102b1a3434aa38904dc3311eb16","modified":1740421367216,"created":1740411046198,"url":"{{BaseUrl}}/api/company/{{IdCompany}}","name":"[BUG 21364 / Carol] Consultar empresa por ID com sucesso","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"preRequestScript":"insomnia.execution.skipRequest()","metaSortKey":-1740391847394,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_b5c2d102b1a3434aa38904dc3311eb16","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740378841748,"created":1740378841748,"name":"Consultar empresa por ID","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367593985.1445,"environmentType":"kv","_type":"request_group"},{"_id":"req_6c0711df75d1441b86961123f20773b3","parentId":"fld_b5c2d102b1a3434aa38904dc3311eb16","modified":1740411369352,"created":1740410564436,"url":"{{BaseUrl}}/api/company/{{InvalidIdCompany}}","name":"Consultar empresa por ID incorreto","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"metaSortKey":-1740391847294,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 400\", function () {\n    insomnia.response.to.have.status(400);\n});\n\ninsomnia.test('Validate company does not exist', () => {\n\tinsomnia.expect('Essa companhia não existe em nosso sistema.').contains(insomnia.response.json().alert);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_26be53558b584f6ab092ff7c656283e0","parentId":"fld_fb75685103e547129f279868b5c85e0c","modified":1740421734028,"created":1740410821286,"url":"{{BaseUrl}}/api/company/status/{{IdCompany}}","name":"[BUG 21955 / Tadeu] Editar status de uma empresa para false","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"status\": false\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"preRequestScript":"insomnia.execution.skipRequest()","metaSortKey":-1740411549036,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate company status is false', () => {\n\tinsomnia.expect(insomnia.response.json().updateCompany.status).to.equal(false);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_fb75685103e547129f279868b5c85e0c","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740378860131,"created":1740378860131,"name":"Atualizar o Status da Empresa","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367593722.0723,"environmentType":"kv","_type":"request_group"},{"_id":"req_d0565f9c339e47ff8ad3431aec9e3430","parentId":"fld_fb75685103e547129f279868b5c85e0c","modified":1740421738739,"created":1740412582744,"url":"{{BaseUrl}}/api/company/status/{{IdCompany}}","name":"[BUG 21957 / Tadeu] Editar status de uma empresa para true","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"status\": true\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"preRequestScript":"insomnia.execution.skipRequest()","metaSortKey":-1740401698215,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate company status is false', () => {\n\tinsomnia.expect(insomnia.response.json().updateCompany.status).to.equal(true);\n});","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5797912b3f374a679de77734a81977c3","parentId":"fld_8080241435f0435898c20e1bd7dbe59a","modified":1740412848126,"created":1740412726011,"url":"{{BaseUrl}}/api/company/{{IdCompany}}","name":"Excluir Cadastro de Empresa com Sucesso","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"metaSortKey":-1740412728652,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 200\", function () {\n    insomnia.response.to.have.status(200);\n});\n\ninsomnia.test('Validate company deletion', () => {\n\tinsomnia.expect('Companhia deletado com sucesso.').to.equal(insomnia.response.json().msg);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_8080241435f0435898c20e1bd7dbe59a","parentId":"fld_fece2676fd8e413991a1a724ba6d8151","modified":1740378879706,"created":1740378879706,"name":"Excluir Cadastro de Empresa","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1740367593590.5361,"environmentType":"kv","_type":"request_group"},{"_id":"req_0c6a1ed514cd4b4dae868f187cbc53e2","parentId":"fld_8080241435f0435898c20e1bd7dbe59a","modified":1740412936649,"created":1740412878645,"url":"{{BaseUrl}}/api/company/{{InvalidIdCompany}}","name":"Cadastro de Empresa com ID Inválido","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"apikey","disabled":false,"key":"Authorization","value":"{{TokenUser}}","addTo":"header"},"metaSortKey":-1740412138844,"isPrivate":false,"pathParameters":[],"afterResponseScript":"insomnia.test(\"Status code is 404\", function () {\n    insomnia.response.to.have.status(404);\n});\n\ninsomnia.test('Validate company deletion', () => {\n\tinsomnia.expect('Essa companhia não existem em nossa base de dados.').to.equal(insomnia.response.json().msg);\n});\n","settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_2b2ddd0cd9598ca8550efea5f2b0771fa6ea0c29","parentId":"wrk_e1e1ad06132e4625bddace0569de4612","modified":1740421753731,"created":1740367631053,"name":"Base Environment","data":{"Cpf":"16811803092","Cnpj":"35896919601083","TooLongString":"tewN5owM76rlzbE9cFXakxkghUwbvoDLOedFyodtIXkkhY05yWIeDm4aZRghqIbKeoAOHLZ1swPLHIXRjAES0cwlNdhvUDYQicMa4","randomZipCode":"15169869","randomCity":"Austin","randomState":"PE","randomDistrict":"Downtown","randomStreet":"Cedar Avenue","randomPhoneNumber":"(418) 601-6183","randomAddressComplement":"Room 404","randomCountry":"Mexico","randomNumber":157991323},"dataPropertyOrder":{"&":["Cpf","Cnpj","TooLongString","randomZipCode","randomCity","randomState","randomDistrict","randomStreet","randomPhoneNumber","randomAddressComplement","randomCountry","randomNumber"]},"color":null,"isPrivate":false,"metaSortKey":1740367631053,"environmentType":"kv","_type":"environment"},{"_id":"jar_2b2ddd0cd9598ca8550efea5f2b0771fa6ea0c29","parentId":"wrk_e1e1ad06132e4625bddace0569de4612","modified":1740421753725,"created":1740367631056,"name":"Default Jar","cookies":[],"_type":"cookie_jar"}]}